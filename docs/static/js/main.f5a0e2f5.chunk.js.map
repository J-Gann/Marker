{"version":3,"sources":["components/canvas/CanvasControl.js","components/canvas/Canvas.js","components/editor/LoadFiles.js","components/editor/MarkerEntry.js","components/editor/FileEntry.js","components/editor/DisplayFiles.js","components/editor/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasControl","setCurrentImage","imagesLength","useState","imageIndex","setImageIndex","play","setPlay","repeat","setRepeat","speed","setSpeed","useEffect","intervalID","window","setInterval","oldIndex","clearInterval","className","type","value","onInput","e","number","Number","parseInt","target","onClick","currentIndex","oldRepeat","Canvas","images","markerOperations","markers","width","height","size","setSize","canvasContainer","useRef","currentImage","img","current","clientWidth","clientHeight","handleResize","addEventListener","removeEventListener","ref","length","scaleWidth","scaleHeight","scale","offsetX","offsetY","x","y","image","currentMarkers","getMarkers","name","Object","keys","map","id","points1","cnt","currentMarker","push","points2","points","stroke","strokeWidth","renderMarkerLine","getMarker","radius","fill","draggable","tension","onDragEnd","setMarker","renderMarkers","LoadFiles","handleNewImages","handleNewMarkers","readFileAsyncURL","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","readFileAsyncText","readAsText","handleLoadImages","files","a","awaitList","nameList","i","all","urlList","imageList","Image","src","forEach","index","sort","handleLoadMarkers","JSON","parse","multiple","accept","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","stringify","MarkerEntry","marker","markerId","console","log","removeMarker","onChange","FileEntry","details","setDetails","title","oldDetails","addMarker","Math","floor","random","toString","renderFileEntryBar","DisplayFiles","Editor","App","setImages","setMarkers","imageTitle","markerID","newID","markerCopy","Navbar","bg","variant","Brand","newImages","newMarkers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5a0e2f5.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport \"./CanvasControl.css\";\n\nconst CanvasControl = ({ setCurrentImage, imagesLength }) => {\n  const [imageIndex, setImageIndex] = useState(0);\n  const [play, setPlay] = useState(false);\n  const [repeat, setRepeat] = useState(true);\n  const [speed, setSpeed] = useState(40);\n\n  useEffect(() => {\n    const intervalID = window.setInterval(() => {\n      if (imagesLength) {\n        if (play && imagesLength > imageIndex) {\n          setImageIndex((oldIndex) => oldIndex + 1);\n        } else if (imagesLength === imageIndex && repeat) {\n          setImageIndex(() => 0);\n        }\n      }\n    }, speed);\n    return () => window.clearInterval(intervalID);\n  });\n\n  useEffect(() => setCurrentImage(imageIndex), [imageIndex, setCurrentImage]);\n\n  return (\n    <div className=\"canvas-control\">\n      <div className=\"current-image\">\n        Image:\n        <input\n          type=\"number\"\n          value={imageIndex}\n          onInput={(e) => {\n            const number = Number.parseInt(e.target.value);\n            if (number >= 0 && number <= imagesLength - 1)\n              setImageIndex(number);\n          }}\n        />\n      </div>\n      <div className=\"current-speed\">\n        Delay:\n        <input\n          type=\"number\"\n          value={speed}\n          onInput={(e) => {\n            const number = Number.parseInt(e.target.value);\n            if (number >= 1) setSpeed(number);\n          }}\n        />\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            setPlay(false);\n            setImageIndex((currentIndex) =>\n              currentIndex !== 0 ? currentIndex - 1 : currentIndex\n            );\n          }}\n        >\n          Previous\n        </button>\n        <button\n          onClick={() => {\n            setPlay(false);\n            setImageIndex((currentIndex) =>\n              currentIndex !== imagesLength + 1\n                ? currentIndex + 1\n                : currentIndex\n            );\n          }}\n        >\n          Next\n        </button>\n\n        <button onClick={() => setPlay(true)}>Play</button>\n        <button onClick={() => setPlay(false)}>Pause</button>\n        <button onClick={() => setRepeat((oldRepeat) => !oldRepeat)}>\n          Toggle Repeat\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CanvasControl;\n","import { useEffect, useRef, useState } from \"react\";\nimport { Stage, Layer, Circle, Image, Line } from \"react-konva\";\n\nimport \"./Canvas.css\";\nimport CanvasControl from \"./CanvasControl\";\n\nconst Canvas = ({ images, markers, markerOperations }) => {\n  const [size, setSize] = useState({ width: 0, height: 0 });\n  const canvasContainer = useRef(null);\n  const [currentImage, setCurrentImage] = useState(0);\n\n  const img = images[currentImage];\n\n  useEffect(() => {\n    const { clientWidth, clientHeight } = canvasContainer.current;\n    const newSize = { width: clientWidth, height: clientHeight };\n    setSize(newSize);\n\n    const handleResize = () => {\n      const { clientWidth, clientHeight } = canvasContainer.current;\n      const newSize = {\n        width: clientWidth,\n        height: clientHeight,\n      };\n      setSize(newSize);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  if (!img)\n    return (\n      <div className=\"canvas\">\n        <div ref={canvasContainer} className=\"canvas-container\"></div>\n        <div>\n          <CanvasControl\n            setCurrentImage={setCurrentImage}\n            imagesLength={images.length}\n            markerOperations={markerOperations}\n          ></CanvasControl>\n        </div>\n      </div>\n    );\n\n  const scaleWidth = size.width / img.width;\n  const scaleHeight = size.height / img.height;\n  const scale = scaleWidth < scaleHeight ? scaleWidth : scaleHeight;\n  const width = img.width * scale;\n  const offsetX = (size.width - width) / 2;\n  const height = img.height * scale;\n  const offsetY = (size.height - height) / 2;\n\n  const renderMarkers = () => {\n    const currentMarkers = markerOperations.getMarkers(img.name);\n    return Object.keys(currentMarkers).map((id) => {\n      const { x, y } = markerOperations.getMarker(img.name, id);\n      return (\n        <Circle\n          key={`marker_${currentImage}_${id}`}\n          x={x * scale + offsetX}\n          y={y * scale + offsetY}\n          radius={10 * scale}\n          fill={\"red\"}\n          stroke={\"black\"}\n          draggable={true}\n          tension={0.5}\n          onDragEnd={(e) =>\n            markerOperations.setMarker(\n              img.name,\n              id,\n              e.target.x() / scale - offsetX / scale,\n              e.target.y() / scale - offsetY / scale\n            )\n          }\n        ></Circle>\n      );\n    });\n  };\n\n  const renderMarkerLine = (size) => {\n    const currentMarkers = markerOperations.getMarkers(img.name);\n    return Object.keys(currentMarkers).map((id) => {\n      let points1 = [];\n      for (let cnt = currentImage - size; cnt <= currentImage; cnt++) {\n        const img = images[cnt];\n        const currentMarkers = markerOperations.getMarkers(img && img.name);\n        const currentMarker = currentMarkers[id];\n        if (currentMarker) {\n          points1.push(currentMarker[\"x\"] * scale + offsetX);\n          points1.push(currentMarker[\"y\"] * scale + offsetY);\n        }\n      }\n      let points2 = [];\n      for (let cnt = currentImage; cnt < currentImage + size + 1; cnt++) {\n        const img = images[cnt];\n        const currentMarkers = markerOperations.getMarkers(img && img.name);\n        const currentMarker = currentMarkers[id];\n        if (currentMarker) {\n          points2.push(currentMarker[\"x\"] * scale + offsetX);\n          points2.push(currentMarker[\"y\"] * scale + offsetY);\n        }\n      }\n      return [\n        <Line\n          key={`linePast_${currentImage}_${id}`}\n          points={points1}\n          stroke={\"blue\"}\n          strokeWidth={4}\n        ></Line>,\n        <Line\n          key={`lineFuture_${currentImage}_${id}`}\n          points={points2}\n          stroke={\"green\"}\n          strokeWidth={4}\n        ></Line>,\n      ];\n    });\n  };\n\n  return (\n    <div className=\"canvas\">\n      <div ref={canvasContainer} className=\"canvas-container\">\n        <Stage className=\"canvas\" width={size.width} height={size.height}>\n          <Layer>\n            <Image\n              x={0 + offsetX}\n              y={0 + offsetY}\n              width={width}\n              height={height}\n              image={img}\n            ></Image>\n            {renderMarkerLine(10, \"green\")}\n            {renderMarkers(10, \"red\", true)}\n          </Layer>\n        </Stage>\n      </div>\n      <div>\n        <CanvasControl\n          setCurrentImage={setCurrentImage}\n          imagesLength={images.length}\n          markerOperations={markerOperations}\n        ></CanvasControl>\n      </div>\n    </div>\n  );\n};\n\nexport default Canvas;\n","import \"./LoadFiles.css\";\n\nconst LoadFiles = ({ handleNewImages, handleNewMarkers, markers }) => {\n  const readFileAsyncURL = (file) => {\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const readFileAsyncText = (file) => {\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.onerror = reject;\n      reader.readAsText(file);\n    });\n  };\n\n  const handleLoadImages = async (files) => {\n    let awaitList = [];\n    let nameList = [];\n    for (var i = 0; i < files.length; i++) {\n      awaitList.push(readFileAsyncURL(files[i]));\n      nameList.push(files[i].name);\n    }\n    const urlList = await Promise.all(awaitList);\n    awaitList = [];\n    const imageList = [];\n    for (var e = 0; e < urlList.length; e++) {\n      let image = new Image();\n      imageList.push(image);\n      awaitList.push(\n        new Promise((resolve, reject) => {\n          image.onload = () => resolve();\n        })\n      );\n      image.src = urlList[e];\n    }\n    await Promise.all(awaitList);\n    imageList.forEach((image, index) => {\n      imageList[index].name = nameList[index];\n    });\n    imageList.sort();\n    handleNewImages(imageList);\n  };\n\n  const handleLoadMarkers = async (file) => {\n    const markers = await readFileAsyncText(file[0]);\n    handleNewMarkers(JSON.parse(markers));\n  };\n\n  const download = (filename, text) => {\n    var element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n    );\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  return (\n    <div>\n      <h3>Files</h3>\n      <div className=\"load-files\">\n        <label>Load Images</label>\n        <input\n          type=\"file\"\n          multiple\n          accept=\"image/png, image/jpeg\"\n          onInput={(e) => handleLoadImages(e.target.files)}\n        />\n        <label>Load Marker</label>\n        <input\n          type=\"file\"\n          accept=\"json\"\n          onInput={(e) => handleLoadMarkers(e.target.files)}\n        />\n        <button\n          onClick={() => download(\"markers.json\", JSON.stringify(markers))}\n        >\n          Download Markers as File\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadFiles;\n","import \"./MarkerEntry.css\";\n\nconst MarkerEntry = ({ marker, markerId, image, markerOperations }) => {\n  return (\n    <div className=\"marker-entries\">\n      <div>\n        <button\n          className=\"fa-remove\"\n          onClick={() => {\n            console.log(\"click\");\n            markerOperations.removeMarker(image.name, marker.id);\n          }}\n        >\n          X\n        </button>\n      </div>\n      <div>\n        <p>id: </p>\n        <input\n          type=\"text\"\n          value={markerId}\n          onChange={(e) => {\n            markerOperations.setMarker(\n              image.name,\n              markerId,\n              marker.x,\n              marker.y,\n              e.target.value\n            );\n          }}\n        />\n      </div>\n      <div>\n        <p>x: </p>\n        <input\n          type=\"text\"\n          value={marker.x}\n          onChange={(e) => {\n            markerOperations.setMarker(\n              image.name,\n              markerId,\n              e.target.value,\n              marker.y\n            );\n          }}\n        />\n      </div>\n      <div>\n        <p>y: </p>\n        <input\n          type=\"text\"\n          value={marker.y}\n          onChange={(e) => {\n            markerOperations.setMarker(\n              image.name,\n              markerId,\n              marker.x,\n              e.target.value\n            );\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MarkerEntry;\n","import \"./FileEntry.css\";\nimport { useState } from \"react\";\nimport MarkerEntry from \"./MarkerEntry\";\n\nconst FileEntry = ({ image, markers, index, markerOperations }) => {\n  const [details, setDetails] = useState(false);\n\n  const renderFileEntryBar = () => {\n    const title = \"[\" + index + \"] IMG: \" + image.name;\n    const switchDetail = () => setDetails((oldDetails) => !oldDetails);\n    const addMarker = () =>\n      markerOperations.addMarker(\n        image.name,\n        0,\n        0,\n        Math.floor(Math.random().toString() * 100)\n      );\n\n    return (\n      <div className=\"file-entry__bar\">\n        <p>{title}</p>\n        <button onClick={switchDetail}>{details ? \"Hide\" : \"Show\"}</button>\n        <button onClick={addMarker}>Add</button>\n      </div>\n    );\n  };\n\n  const renderFileEntryDetails = () => {\n    if (!details) return <></>;\n    const markerList = markerOperations.getMarkers(image.name);\n    if (!markerList) return <div>No Markers</div>;\n    return (\n      <div className=\"file-entry__details\">\n        {Object.keys(markerOperations.getMarkers(image.name)).map((id) => {\n          const marker = markerOperations.getMarker(image.name, id);\n          return (\n            <MarkerEntry\n              key={index}\n              markerId={id}\n              marker={marker}\n              markerOperations={markerOperations}\n              image={image}\n            ></MarkerEntry>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"file-entry\">\n      {renderFileEntryBar()}\n      {renderFileEntryDetails()}\n    </div>\n  );\n};\n\nexport default FileEntry;\n","import \"./DisplayFiles.css\";\nimport FileEntry from \"./FileEntry\";\n\nconst DisplayFiles = ({ images, markers, markerOperations }) => {\n  return (\n    <>\n      <h3>Images</h3>\n      <div className=\"display-files\">\n        {images.map((image, index) => (\n          <FileEntry\n            key={index}\n            index={index}\n            image={image}\n            markers={markers}\n            markerOperations={markerOperations}\n          ></FileEntry>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default DisplayFiles;\n","import \"./Editor.css\";\nimport LoadFiles from \"./LoadFiles\";\nimport DisplayFiles from \"./DisplayFiles\";\n\nconst Editor = ({ handleNewImages, handleNewMarkers, images, markers, markerOperations }) => {\n  return (\n    <div className=\"editor\">\n      <div className=\"editor-load\">\n        <LoadFiles\n          handleNewImages={handleNewImages}\n          handleNewMarkers={handleNewMarkers}\n          markers={markers}\n        ></LoadFiles>\n      </div>\n      <div className=\"editor-display\">\n        <DisplayFiles images={images} markers={markers} markerOperations={markerOperations}></DisplayFiles>\n      </div>\n    </div>\n  );\n};\n\nexport default Editor;\n","import \"./App.css\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { useState } from \"react\";\nimport Canvas from \"./components/canvas/Canvas\";\nimport Editor from \"./components/editor/Editor\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [markers, setMarkers] = useState({});\n\n  const handleNewImages = (newImages) => setImages(newImages);\n  const handleNewMarkers = (newMarkers) => setMarkers(newMarkers);\n\n  const getMarker = (imageTitle, markerID) => markers[imageTitle][markerID];\n\n  const setMarker = (imageTitle, markerID, x, y, newID) => {\n    const markerCopy = { ...markers };\n    if (!newID) {\n      let marker = markerCopy[imageTitle][markerID];\n      if (x) marker.x = x;\n      if (y) marker.y = y;\n    } else if (newID) {\n      delete markerCopy[imageTitle][markerID];\n      markerCopy[imageTitle][newID] = {\n        x: x,\n        y: y,\n      };\n    }\n    setMarkers(markerCopy);\n  };\n\n  const getMarkers = (imageTitle) =>\n    markers[imageTitle] ? markers[imageTitle] : [];\n\n  const removeMarker = (imageTitle, markerID) => {\n    const markerCopy = { ...markers };\n    delete markerCopy[imageTitle][markerID];\n    setMarkers(markerCopy);\n  };\n\n  const addMarker = (imageTitle, markerID, x, y) => {\n    const markerCopy = { ...markers };\n    markerCopy[imageTitle][markerID] = {\n      x: x,\n      y: y,\n    };\n  };\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\" id=\"app-navigation\">\n        <Navbar.Brand>Marker Visualization</Navbar.Brand>\n      </Navbar>\n      <div id=\"app-container\">\n        <Canvas\n          images={images}\n          markers={markers}\n          markerOperations={{\n            setMarker,\n            getMarker,\n            getMarkers,\n            removeMarker,\n            addMarker,\n          }}\n        ></Canvas>\n        <Editor\n          handleNewImages={handleNewImages}\n          handleNewMarkers={handleNewMarkers}\n          markerOperations={{\n            setMarker,\n            getMarker,\n            getMarkers,\n            removeMarker,\n            addMarker,\n          }}\n          images={images}\n          markers={markers}\n        ></Editor>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}